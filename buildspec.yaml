version: 0.2

env:
  variables:
    AWS_REGION: "us-east-1"
    IMAGE_REPO_NAME: "awspringbootdeployment-app"
    AWS_ACCOUNT_ID: "586928288932"
    IMAGE_TAG: "springbootecs"

phases:
  install:
    runtime-versions:
      java: corretto11
    commands:
      - echo "Checking AWS CLI and Docker versions"
      - aws --version
      - docker --version
      - echo "Logging into ECR"
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

  pre_build:
    commands:
      - echo "Preparing build environment"
      - echo "Source version: $CODEBUILD_RESOLVED_SOURCE_VERSION"

  build:
    commands:
      - |
        if docker images -q $IMAGE_TAG > /dev/null 2>&1; then
          echo "Image $IMAGE_TAG exists. Removing..."
          docker rmi -f $IMAGE_TAG
        else
          echo "Image $IMAGE_TAG does not exist. Skipping removal."
        fi
      - echo "Removing dangling images if any..."
      - docker image prune -f
      - echo "Building Spring Boot JAR"
      - set -o pipefail
      - mvn -X clean package -DskipTests | tee build.log
      - echo "Packaging complete, status: $?"
      - echo "Building Docker image: $IMAGE_TAG"
      - docker build -t $IMAGE_TAG .
      - echo "Tagging image for ECR"
      - docker tag $IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest
      - echo "Pushing image to ECR"
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest

post_build:
  commands:
    - echo "Build completed on $(date)"
    - echo "Pushed image:"
    - echo "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest"

artifacts:
  files:
    - target/*.jar
    - build.log
  discard-paths: yes

